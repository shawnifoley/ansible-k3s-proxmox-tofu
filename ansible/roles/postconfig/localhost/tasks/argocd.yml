---
- name: Create argocd namespace
  kubernetes.core.k8s:
    api_version: v1
    kind: Namespace
    name: argocd
    state: present

- name: Apply ArgoCD manifests
  kubernetes.core.k8s:
    state: present
    src: https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml
    namespace: argocd

- name: Install Nginx Ingress Controller
  community.kubernetes.helm:
    name: nginx-ingress
    chart_ref: ingress-nginx
    release_namespace: ingress-nginx
    create_namespace: true
    chart_repo_url: https://kubernetes.github.io/ingress-nginx
    release_state: present
    values:
      controller:
        publishService:
          enabled: true

- name: Install cert-manager
  community.kubernetes.helm:
    name: cert-manager
    chart_ref: cert-manager
    release_namespace: cert-manager
    create_namespace: true
    chart_repo_url: https://charts.jetstack.io
    release_state: present
    chart_version: 1.17.4
    values:
      crds:
        enabled: true

- name: Create Cloudflare API Token Secret
  kubernetes.core.k8s:
    state: present
    namespace: cert-manager
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: cloudflare-api-token-secret
      stringData:
        api-token: "{{ cloudflare_api_token }}"

- name: Deploy ArgoCD resources and clean up
  block:
    - name: Copy issuer and ingress files
      ansible.builtin.copy:
        src: "{{ item }}"
        dest: "/tmp/{{ item }}"
      loop:
        - cluster-issuer-cloudflare.yaml
        - argocd-ingress.yaml

    - name: Apply cluster issuer
      ansible.builtin.command: kubectl apply -f /tmp/cluster-issuer-cloudflare.yaml

    - name: Wait for ClusterIssuer letsencrypt-cloudflare to be ready
      kubernetes.core.k8s:
        api_version: cert-manager.io/v1
        kind: ClusterIssuer
        name: letsencrypt-cloudflare
        wait: true
        wait_timeout: 300

    - name: Apply ArgoCD ingress
      ansible.builtin.command: kubectl apply -f /tmp/argocd-ingress.yaml

  always:
    - name: Clean up temporary files
      ansible.builtin.file:
        path: "/tmp/{{ item }}"
        state: absent
      loop:
        - cluster-issuer-cloudflare.yaml
        - argocd-ingress.yaml
